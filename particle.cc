#include <cmath>
#include "color.h"
#include "particle.h"
#define GL_GLEXT_PROTOTYPES
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif



extern float rep;
extern float shinyvec[1];
extern unsigned int texture[20];
extern float rainspeed;

FACET3 facets[32] = {
{0.5, -0.5, 0.707107,
1, 0, 0,
0.5, 0.5, 0.707107},

{0.5, 0.5, 0.707107,
0, 1, 0,
-0.5, 0.5, 0.707107},

{-0.5, 0.5, 0.707107,
-1, 0, 0,
-0.5, -0.5, 0.707107},

{-0.5, -0.5, 0.707107,
0, -1, 0,
0.5, -0.5, 0.707107},

{0.5, 0.5, -0.707107,
1, 0, 0,
0.5, -0.5, -0.707107},

{-0.5, 0.5, -0.707107,
0, 1, 0,
0.5, 0.5, -0.707107},

{-0.5, -0.5, -0.707107,
-1, 0, 0,
-0.5, 0.5, -0.707107},

{0.5, -0.5, -0.707107,
0, -1, 0,
-0.5, -0.5, -0.707107},

{0, 0, 1,
0.5, -0.5, 0.707107,
0.5, 0.5, 0.707107},

{0.5, -0.5, 0.707107,
0.707107, -0.707107, 0,
1, 0, 0},

{1, 0, 0,
0.707107, 0.707107, 0,
0.5, 0.5, 0.707107},

{0, 0, 1,
0.5, 0.5, 0.707107,
-0.5, 0.5, 0.707107},

{0.5, 0.5, 0.707107,
0.707107, 0.707107, 0,
0, 1, 0},

{0, 1, 0,
-0.707107, 0.707107, 0,
-0.5, 0.5, 0.707107},

{0, 0, 1,
-0.5, 0.5, 0.707107,
-0.5, -0.5, 0.707107},

{-0.5, 0.5, 0.707107,
-0.707107, 0.707107, 0,
-1, 0, 0},

{-1, 0, 0,
-0.707107, -0.707107, 0,
-0.5, -0.5, 0.707107},

{0, 0, 1,
-0.5, -0.5, 0.707107,
0.5, -0.5, 0.707107},

{-0.5, -0.5, 0.707107,
-0.707107, -0.707107, 0,
0, -1, 0},

{0, -1, 0,
0.707107, -0.707107, 0,
0.5, -0.5, 0.707107},

{0, 0, -1,
0.5, 0.5, -0.707107,
0.5, -0.5, -0.707107},

{0.5, 0.5, -0.707107,
0.707107, 0.707107, 0,
1, 0, 0},

{1, 0, 0,
0.707107, -0.707107, 0,
0.5, -0.5, -0.707107},

{0, 0, -1,
-0.5, 0.5, -0.707107,
0.5, 0.5, -0.707107},

{-0.5, 0.5, -0.707107,
-0.707107, 0.707107, 0,
0, 1, 0},

{0, 1, 0,
0.707107, 0.707107, 0,
0.5, 0.5, -0.707107},

{0, 0, -1,
-0.5, -0.5, -0.707107,
-0.5, 0.5, -0.707107},

{-0.5, -0.5, -0.707107,
-0.707107, -0.707107, 0,
-1, 0, 0},

{-1, 0, 0,
-0.707107, 0.707107, 0,
-0.5, 0.5, -0.707107},

{0, 0, -1,
0.5, -0.5, -0.707107,
-0.5, -0.5, -0.707107},

{0.5, -0.5, -0.707107,
0.707107, -0.707107, 0,
0, -1, 0},

{0, -1, 0,
-0.707107, -0.707107, 0,
-0.5, -0.5, -0.707107}

};


//
// 
//
void drawparticle(Particle *p)
{
	glPushMatrix();
	glTranslated(p->x, p->y, p->z);
	glRotatef(p->rotatex, 1, 0, 0);
	glRotatef(p->rotatez, 0, 0, 1);
	glScaled(p->scale, p->scale, p->scale);

	glEnable(GL_BLEND);
	glBlendFunc(GL_SRC_ALPHA,GL_ONE);
	glDepthMask(0);
	
	glColor4f(p->color.r, p->color.g, p->color.b, p->color.dim);

	for(int i = 0; i< 32; ++i)
	{
		glBegin(GL_POLYGON);
        glVertex3f(facets[i].p1.x , facets[i].p1.y , facets[i].p1.z);
        glVertex3f(facets[i].p2.x , facets[i].p2.y , facets[i].p2.z);
        glVertex3f(facets[i].p3.x , facets[i].p3.y , facets[i].p3.z);
		glEnd();
	}
	glDisable(GL_BLEND);
	glDepthMask(1);
	glPopMatrix();
}

